{"version":3,"sources":["reportWebVitals.js","redux/spray_gate.js","redux/data.js","components/SprayGate/index.js","components/Utils/make_input.js","redux/roi.js","components/ROI/index.js","components/App/index.js","redux/reducer.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","sprayGateInitialState","growthStageOptions","rustPresenceOptions","country","undefined","state","variety","growthStageSelection","rustPresenceSelection","SET_RUST_PRESENCE_SELECTION_INDEX","SET_GROWTH_STAGE_SELECTION_INDEX","SET_COUNTRY","SET_STATE","SET_VARIETY","setRustPresenceSelection","value","type","setGrowthStageSelection","setCountry","setState","setVariety","selectGrowthStageOptions","s","sprayGate","selectGrowthStageSelection","selectRustPresenceOptions","selectRustPresenceSelection","selectCountry","selectState","selectVariety","getShouldSpray","stage","presence","sus","shouldSpray","why","SET_DATA","SET_ERROR","initialState","loading","errorOccured","selectError","data","error","selectErrorOccured","selectLoading","selectValidCountries","out","Set","season","Object","keys","forEach","add","selectValidVarieties","concat","compareSeasons","a","b","sa","split","sb","la","length","lb","aa","reduce","selectLocationVarietySusceptible","co","st","va","d","sort","se","GeneralSelector","name","valSelector","optionsSelector","action","className","dispatch","useDispatch","idx","useSelector","options","temp","includes","useEffect","onChange","e","target","map","o","SprayInfo","style","SprayGate","susNode","borderColor","c","res","trialSeason","href","htmlFor","MakeInput","set","units","formatter","children","labelClassNames","inputClassNames","spanClassNames","useState","input","setInput","focused","setFocused","parsed","Number","parseFloat","isNaN","onBlur","onFocus","roiInitialState","costOfFungicide","costOfLabor","plotSize","priceOfGrain","SET_COST_OF_FUNGICIDE","SET_COST_OF_LABOR","SET_PLOT_SIZE","SET_PRICE_OF_GRAIN","setCostOfFungicide","setCostOfLabor","setPriceOfGrain","selectCostOfFungicide","roi","selectCostOfLabor","selectPlotSize","selectPriceOfGrain","selectROIResults","growthStage","sprays","avgYield","key","incRev","revCosts","push","incRevTotal","returnOnIn","ROIInfo","ROI","v","toFixed","NavigationComponent","leftLink","leftText","rightLink","rightText","rightClassName","to","App","DATA_URL","process","fetch","json","setData","catch","console","setError","role","JSON","stringify","path","rootReducer","combineReducers","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","render","StrictMode","document","getElementById"],"mappings":"oKAYeA,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,sBCLDQ,EAAwB,CACjCC,mBAAoB,CAAC,mBACrB,sCACA,sBACAC,oBAAqB,CAAC,2BACrB,oDACA,sEACA,2EACA,wEACDC,aAASC,EACTC,WAAOD,EACPE,aAASF,EACTG,qBAAsB,EACtBC,sBAAuB,GAIrBC,EAAoC,qCACpCC,EAAmC,oCACnCC,EAAc,uBACdC,EAAY,qBACZC,EAAc,uBAEb,SAASC,EAAyBC,GACrC,MAAO,CACVC,KAAMP,EACNM,MAAOA,GAGD,SAASE,EAAwBF,GACpC,MAAO,CACVC,KAAMN,EACNK,MAAOA,GAGD,SAASG,EAAWH,GACvB,MAAO,CACVC,KAAML,EACNI,MAAOA,GAGD,SAASI,EAASJ,GACrB,MAAO,CACVC,KAAMJ,EACNG,MAAOA,GAGD,SAASK,EAAWL,GACvB,MAAO,CACVC,KAAMH,EACNE,MAAOA,GAKD,IAAMM,EAA2B,SAACC,GAAD,OAAOA,EAAEC,UAAUtB,oBAC9CuB,EAA4B,SAACF,GAAD,OAAOA,EAAEC,UAAUhB,sBAE/CkB,EAA4B,SAACH,GAAD,OAAOA,EAAEC,UAAUrB,qBAC/CwB,EAA6B,SAACJ,GAAD,OAAOA,EAAEC,UAAUf,uBAEhDmB,EAAgB,SAACL,GAAD,OAAOA,EAAEC,UAAUpB,SACnCyB,EAAc,SAACN,GAAD,OAAOA,EAAEC,UAAUlB,OACjCwB,EAAgB,SAACP,GAAD,OAAOA,EAAEC,UAAUjB,SAEnCwB,EAAiB,SAACC,EAAOC,EAAUC,GAC5C,IAAIC,EACAC,EACJ,GAAY,gBAARF,EACP,OAAQF,GACR,KAAK/B,EAAsBC,mBAAmB,GAC1C,OAAQ+B,GACR,KAAKhC,EAAsBE,oBAAoB,GAClDgC,GAAc,EACdC,EAAM,gDACN,MACG,KAAKnC,EAAsBE,oBAAoB,GAClDgC,GAAc,EACdC,EAAM,2JACN,MACG,KAAKnC,EAAsBE,oBAAoB,GAC/C,KAAKF,EAAsBE,oBAAoB,GAC/C,KAAKF,EAAsBE,oBAAoB,GAClDgC,GAAc,EACdC,EAAM,4JAIH,MACJ,KAAKnC,EAAsBC,mBAAmB,GAC1C,OAAQ+B,GACR,KAAKhC,EAAsBE,oBAAoB,GAClDgC,GAAc,EACdC,EAAM,gDACN,MACG,KAAKnC,EAAsBE,oBAAoB,GAClDgC,GAAc,EACdC,EAAM,2JACN,MACG,KAAKnC,EAAsBE,oBAAoB,GAI/C,KAAKF,EAAsBE,oBAAoB,GAClDgC,GAAc,EACdC,EAAM,oFACN,MACG,KAAKnC,EAAsBE,oBAAoB,GAClDgC,GAAc,EACdC,EAAM,4EAIH,MACJ,KAAKnC,EAAsBC,mBAAmB,GAC1CiC,GAAc,EACdC,EAAM,mIAIY,YAARF,GACdC,GAAc,EACdC,EAAM,iDAEND,GAAc,EACdC,EAAM,sGAEH,MAAO,CACVD,cAAaC,Q,oBClIDC,EAAW,eAClBC,EAAY,gBAIZC,EAAe,CACjBC,SAAS,EACTC,cAAc,GAkBX,IAAMC,EAAc,SAAAnB,GAAC,OAAIA,EAAEoB,KAAKC,OAC1BC,EAAqB,SAAAtB,GAAC,OAAIA,EAAEoB,KAAKF,cACjCK,EAAgB,SAAAvB,GAAC,OAAIA,EAAEoB,KAAKH,SAG5BO,EAAuB,SAAAxB,GAChC,IAAIyB,EAAM,IAAIC,IACd,IAAK,IAAIC,KAAU3B,EAAEoB,KAAKA,KAC7BQ,OAAOC,KAAK7B,EAAEoB,KAAKA,KAAKO,IAASG,QAAQL,EAAIM,IAAKN,GAE/C,OAAO,YAAIA,IAYFO,EAAuB,SAAAhC,GAChC,IAAKA,EAAEC,UAAUpB,SAAWmB,EAAEC,UAAUlB,MAC3C,MAAO,GAEJ,IAAI0C,EAAM,GACV,IAAK,IAAIE,KAAU3B,EAAEoB,KAAKA,KACvBpB,EAAEC,UAAUpB,WAAWmB,EAAEoB,KAAKA,KAAKO,IAAW3B,EAAEC,UAAUlB,SAASiB,EAAEoB,KAAKA,KAAKO,GAAQ3B,EAAEC,UAAUpB,WAGzG4C,EAAMA,EAAIQ,OAAOL,OAAOC,KAAK7B,EAAEoB,KAAKA,KAAKO,GAAQ3B,EAAEC,UAAUpB,SAASmB,EAAEC,UAAUlB,UAE/E,OAAO0C,GAELS,EAAiB,SAACC,EAAEC,GACtB,IAAMC,EAAKF,EAAEG,MAAM,KACbC,EAAKH,EAAEE,MAAM,KACbE,EAAKH,EAAGI,OACRC,EAAKH,EAAGE,OAERE,EAAKN,EAAGO,QAAO,SAACT,EAAGC,GAAJ,OAAUD,EAAIC,KAAGI,EAGtC,OAFWH,EAAGO,QAAO,SAACT,EAAGC,GAAJ,OAAUD,EAAIC,KAAGM,EAE1BC,GAEHE,EAAmC,SAACC,EAAIC,EAAIC,GAAT,OAAgB,SAAAhD,GAC5D,IAAK8C,IAAOC,IAAOC,EACtB,MAAO,MAAClE,OAAWA,GAEhB,IAJiE,EAI3DmE,EAAIjD,EAAEoB,KAAKA,KAJgD,cAKlDQ,OAAOC,KAAK7B,EAAEoB,KAAKA,MAAM8B,KAAKhB,IALoB,IAKjE,2BAA8D,CAAC,IAAtDiB,EAAqD,QACjE,GAAIF,EAAEE,GAAIL,IAAOG,EAAEE,GAAIL,GAAIC,IAAOE,EAAEE,GAAIL,GAAIC,GAAIC,GAC5C,MAAO,CAACC,EAAEE,GAAIL,GAAIC,GAAIC,GAAKG,IAPqC,8BAUjE,MAAO,MAACrE,OAAWA,K,WCvDjBsE,EAAkB,SAAC,GAA6D,IAA5DC,EAA2D,EAA3DA,KAAMC,EAAqD,EAArDA,YAAaC,EAAwC,EAAxCA,gBAAiBC,EAAuB,EAAvBA,OAAQC,EAAe,EAAfA,UAC5DC,EAAWC,cAEXC,EAAMC,YAAYP,GAClBQ,EAAUD,YAAYN,GACxBQ,OAAOjF,EAKX,OAJM8E,GAAQE,EAAQE,SAASJ,MAASE,EAAQrB,OAAS,KAC5DsB,EAAOD,EAAQ,IAEZG,qBAAU,WAAYF,GAAML,EAASF,EAAOO,MAAS,CAACA,IAC/C,wBAAQV,KAAMA,EACpBI,UAAS,sBAAiBA,GAC1BS,SAAU,SAACC,GAAD,OAAOT,EAASF,EAAOW,EAAEC,OAAO3E,SAC1CA,MAAOmE,EAHD,SAKFE,EAAQO,KAAI,SAACC,GAAD,OAAO,yBAAgB7E,MAAO6E,EAAvB,cAA4BA,EAA5B,MAAaA,SAG5BC,EAAY,WACrB,IAAM7D,EAAWmD,YAAYzD,GACvBK,EAAQoD,YAAY3D,GACpBrB,EAAUgF,YAAYxD,GACtBtB,EAAQ8E,YAAYvD,GACpBtB,EAAU6E,YAAYtD,GALD,EAOLsD,YAAYhB,EAAiChE,EAASE,EAAOC,IAPxD,mBAOpB2B,EAPoB,KASrBC,GATqB,KASPJ,EAAeC,EAAOC,EAAUC,IACpD,OAAO,gCACP,sBAAK8C,UAAU,mDAAmDe,MAAO,CAAC,MAAQ,eAAlF,UACI,qBAAIf,UAAU,cAAd,yBACU7C,EAAYA,aAAe,MADrC,YAGA,mBAAG6C,UAAU,cAAb,SACF7C,EAAYC,SAGV,4RASK4D,EAAY,WACrB,IAKIC,EAASC,EDxCgBC,ECmCvB/F,EAAUgF,YAAYxD,GACtBtB,EAAQ8E,YAAYvD,GACpBtB,EAAU6E,YAAYtD,GAHD,EAKAsD,YAAYhB,EAAiChE,EAASE,EAAOC,IAL7D,mBAKpB6F,EALoB,KAKfC,EALe,KAO3B,GAAY,YAARD,EACPF,EAAc,iBACdD,EAAU,oBAAGjB,UAAU,WAAb,4CAAuD,sBAAMA,UAAU,4BAAhB,SAA6CzE,IAApG,WACH,uBAAMyE,UAAU,4BAAhB,UAA6C1E,EAA7C,KAAsDF,KADnD,oFACmJ,mBAAGkG,KAAK,2CAAR,uDAEnJ,CACV,IAAIpE,EAAc,gBAARkE,EACVF,EAAchE,EAAM,gBAAkB,iBAClC+D,EAAU,qCACP,oBAAGjB,UAAU,WAAb,cAAyB,sBAAMA,UAAU,4BAAhB,SAA6CzE,IAAtE,iBACE,sBAAMyE,UAAU,4BAAhB,SAA6C9C,EAAM,MAAQ,OAD7D,+BAGH,sBAAM8C,UAAU,4BAAhB,SAA6CqB,IAH1C,sBAIH,uBAAMrB,UAAU,4BAAhB,UAA6C1E,EAA7C,KAAsDF,EAAtD,OAJG,qBAMA,oBAAG4E,UAAU,WAAb,+CACA,sBAAMA,UAAU,4BAAhB,SAA6C9C,EAAM,cAAgB,cADnE,8CASJ,YAHY7B,IAAR+F,IACPH,EAAU,0CAEA,sBAAKjB,UAAU,OAAf,UACH,sBAAKA,UAAU,sCAAf,UACH,sBAAKA,UAAU,MAAf,UACI,uBAAOA,UAAU,iBAAiBuB,QAAQ,cAA1C,6BACA,cAAC,EAAD,CAAiBvB,UAAU,SAAUJ,KAAK,cAC9CC,YAAapD,EACbqD,gBAAiBxD,EACjByD,OAAQ7D,OAER,sBAAK8D,UAAU,MAAf,UACI,uBAAOA,UAAU,iBAAiBuB,QAAQ,eAA1C,8BACA,cAAC,EAAD,CAAiBvB,UAAU,SAASJ,KAAK,eAC7CC,YAAalD,EACbmD,gBAAiBpD,EACjBqD,OAAQhE,OAER,sBAAKiE,UAAU,MAAf,UACI,uBAAOA,UAAU,iBAAiBuB,QAAQ,UAA1C,wBACA,cAAC,EAAD,CAAiBvB,UAAU,SAASJ,KAAK,UAC7CC,YAAajD,EACbkD,gBAAiB/B,EACjBgC,OAAQ5D,OAER,sBAAK6D,UAAU,MAAf,UACI,uBAAOA,UAAU,iBAAiBuB,QAAQ,QAA1C,qCACA,cAAC,EAAD,CAAiBvB,UAAU,SAASJ,KAAK,QAC7CC,YAAahD,EACbiD,iBD5F4BqB,EC4FO/F,ED5FF,SAAAmB,GAClC,IAAIyB,EAAM,IAAIC,IACd,IAAK,IAAIC,KAAU3B,EAAEoB,KAAKA,KACzBwD,KAAK5E,EAAEoB,KAAKA,KAAKO,IACjBC,OAAOC,KAAK7B,EAAEoB,KAAKA,KAAKO,GAAQiD,IAAI9C,QAAQL,EAAIM,IAAKN,GAGtD,OAAO,YAAIA,KCsFV+B,OAAQ3D,OAER,sBAAK4D,UAAU,MAAf,UACI,uBAAOuB,QAAQ,UAAUvB,UAAU,iBAAnC,gCACA,cAAC,EAAD,CACHA,UAAU,SACVJ,KAAK,UACLC,YAAa/C,EACbgD,gBAAiBvB,EACjBwB,OAAQ1D,UAGN,qBAAK2D,UAAS,0BAAqBkB,EAArB,yCAAd,SACFD,QC7IOO,EAAY,SAAC,GAAsG,IAArG5B,EAAoG,EAApGA,KAAMtE,EAA8F,EAA9FA,MAAOmG,EAAuF,EAAvFA,IAAKC,EAAkF,EAAlFA,MAAOC,EAA2E,EAA3EA,UAAWC,EAAgE,EAAhEA,SAAUC,EAAsD,EAAtDA,gBAAiBC,EAAqC,EAArCA,gBAAiBC,EAAoB,EAApBA,eACjG9B,EAAWC,cAD0G,EAEjG8B,mBAAS1G,GAFwF,mBAEpH2G,EAFoH,KAE7GC,EAF6G,OAG7FF,oBAAS,GAHoF,mBAGpHG,EAHoH,KAG3GC,EAH2G,KAe3H,OAXA5B,qBAAU,WACb,IAAI6B,EAASC,OAAOC,WAAWN,IAC1BO,MAAMH,IAAWA,GAAUA,IAAW/G,GACvC2E,EAASwB,EAAIY,MAEX,CAACpC,EAAU3E,EAAOmG,EAAKQ,IAErBN,IACRA,EAAY,SAACjD,GAAD,OAAOA,IAGT,qCACV,wBAAOsB,UAAW6B,EAAiBN,QAAS3B,EAA5C,cAAoDgC,EAApD,OACA,sBAAKb,MAAO,CAAC,WAAc,UAAWf,UAAW8B,EAAjD,UACA,uBAAOf,MAAO,CAAC,MAAS,QAASnB,KAAMA,EAAM5D,MAAOmG,EAAUF,EAAQN,EAAUM,GAAQQ,OAAQ,SAAC/B,GAAD,OAAO0B,GAAW,IAAQM,QAAS,SAAChC,GAAD,OAAO0B,GAAW,IAAO3B,SAAU,SAAAC,GAAC,OAAIwB,EAASxB,EAAEC,OAAO3E,UAC7L,uBAAMgE,UAAW+B,EAAjB,cAAmCL,EAAnC,c,QCpBYiB,EAAkB,CAC3BC,gBAAiB,KACjBC,YAAa,MACbC,SAAU,EACVC,aAAc,KAIZC,EAAwB,yBACxBC,EAAoB,qBACpBC,EAAgB,kBAChBC,EAAqB,sBAEpB,SAASC,GAAmBpH,GAC/B,MAAO,CACVC,KAAM+G,EACNhH,MAAOA,GAGD,SAASqH,GAAerH,GAC3B,MAAO,CACVC,KAAMgH,EACNjH,MAAOA,GASD,SAASsH,GAAgBtH,GAC5B,MAAO,CACVC,KAAMkH,EACNnH,MAAOA,GAKD,IAAMuH,GAAwB,SAAChH,GAAD,OAAOA,EAAEiH,IAAIZ,iBACrCa,GAAoB,SAAClH,GAAD,OAAOA,EAAEiH,IAAIX,aACjCa,GAAiB,SAACnH,GAAD,OAAOA,EAAEiH,IAAIV,UAC9Ba,GAAqB,SAACpH,GAAD,OAAOA,EAAEiH,IAAIT,cAElCa,GAAmB,SAACrH,GAqC7B,IApCA,IAAMwG,EAAeY,GAAmBpH,GAClCuG,EAAWY,GAAenH,GAC1BqG,EAAkBW,GAAsBhH,GACxCsG,EAAcY,GAAkBlH,GAClCyB,EAAM,GAgCV,MA/Ba,CAAC,CACjB6F,YAAa,QACbC,OAAO,EACPC,SAAU,OAEP,CACHF,YAAa,QACbC,OAAO,EACPC,SAAU,OAEP,CACHF,YAAa,QACbC,OAAO,EACPC,SAAU,OAEP,CACHF,YAAa,QACbC,OAAQ,EACRC,SAAU,MAEP,CACHF,YAAa,QACbC,OAAO,EACPC,SAAU,OAEP,CACHF,YAAa,QACbC,OAAO,EACPC,SAAU,QAGP,eAAsB,CAAjB,IAAIC,EAAG,KACXC,EAASD,EAAID,SAAWhB,EACxBmB,EAAWD,EAASD,EAAIF,QAAQjB,EAAcD,GAClD5E,EAAImG,KAAJ,aACIF,OAAQA,EACRG,YAAaJ,EAAID,SAAWhB,EAAeD,EAC3CoB,SAAUA,EACVG,WAAYH,GAAUtB,EAAgBoB,EAAIF,SACvCE,IAGJ,OAAOhG,GC9EJ,IAAMsG,GAAU,WACnB,OAAO,gCACH,mFACC,oBAAGtE,UAAU,OAAb,wZAKmE,mBAAGsB,KAAK,wCAAwCX,OAAO,SAAvD,sCALnE,sDAUI4D,GAAM,WACErE,cAAjB,IAEM0C,EAAkBxC,YAAYmD,IAC9BT,EAAW1C,YAAYsD,IACvBX,EAAe3C,YAAYuD,IAC3Bd,EAAczC,YAAYqD,IAE1BD,EAAMpD,YAAYwD,IAExB,OAAO,gCACL,wDACE,sBAAK5D,UAAU,mDAAmDe,MAAO,CAAC,MAAQ,eAAlF,UACP,qBAAKf,UAAU,WAAf,SACI,cAAC,EAAD,CAAW6B,gBAAgB,uBAAuBC,gBAAgB,WAC9DlC,KAAK,kBAAkBtE,MAAOsH,EAC9BnB,IAAK2B,GAAoB1B,MAAM,MAAMC,UAAW,SAAC6C,GAAD,iBAAYA,IAFhE,iCAMJ,qBAAKxE,UAAU,WAAf,SACI,cAAC,EAAD,CAAW6B,gBAAgB,uBAAuBC,gBAAgB,WAC9DlC,KAAK,WAAWtE,MAAOwH,EACvBrB,IAAKqB,EAAUpB,MAAM,KAFzB,yBAMJ,qBAAK1B,UAAU,WAAf,SACI,cAAC,EAAD,CAAW6B,gBAAgB,uBAAuBC,gBAAgB,WAC9DlC,KAAK,eAAetE,MAAOyH,EAC3BtB,IAAK6B,GAAiB5B,MAAM,MAAMC,UAAW,SAAC6C,GAAD,iBAAYA,IAF7D,8BAMJ,qBAAKxE,UAAU,WAAf,SACI,cAAC,EAAD,CAAW6B,gBAAgB,uBAAuBC,gBAAgB,WAC9DlC,KAAK,cAActE,MAAOuH,EAC1BpB,IAAK4B,GAAgB3B,MAAM,YAAYC,UAAW,SAAC6C,GAAD,iBAAYA,IAFlE,gCAOG,wBAAOxE,UAAU,qCAAjB,UACH,gCACA,+BACI,8CAGA,kDAGA,+CAGA,wDAGA,2DAGA,+CAGA,uDAKJ,gCACCwD,EAAI5C,KAAI,SAACpB,GAAD,OACL,+BACH,6BACKA,EAAEqE,cAEP,6BACKrE,EAAEsE,SAEP,mCACMtE,EAAEuE,SAASU,QAAQ,MAEzB,mCACMjF,EAAEyE,OAAOQ,QAAQ,MAEvB,mCACMjF,EAAE4E,YAAYK,QAAQ,MAE5B,mCACMjF,EAAE0E,SAASO,QAAQ,MAEzB,mCACMjF,EAAE6E,WAAWI,QAAQ,iBAMzB,sBAAKzE,UAAU,2CAAf,UACH,+CACG,qBAAIA,UAAU,MAAd,UACH,oBAAIA,UAAU,WAAd,qCACA,oBAAIA,UAAU,WAAd,sVAGA,oBAAIA,UAAU,WAAd,oCACA,oBAAIA,UAAU,WAAd,qGAEA,oBAAIA,UAAU,WAAd,8BACA,oBAAIA,UAAU,WAAd,qJAEA,oBAAIA,UAAU,WAAd,8BACA,oBAAIA,UAAU,WAAd,oHCvGC0E,GAAsB,SAAC,GAA+D,IAA9DC,EAA6D,EAA7DA,SAAUC,EAAmD,EAAnDA,SAAUC,EAAyC,EAAzCA,UAAWC,EAA8B,EAA9BA,UAAWC,EAAmB,EAAnBA,eACtE,OAAO,sBAAK/E,UAAU,+DAAf,UACP,eAAC,IAAD,CAAMA,UAAS,sCAAiC2E,EAAW,UAAY,aAAeK,GAAIL,GAAY,GAAtG,UACA,mBAAG3E,UAAU,mBAAmBe,MAAO,CAAC,SAAW,YADnD,IACoE6D,EADpE,OAEA,eAAC,IAAD,CAAM5E,UAAS,sCAAiC6E,EAAY,UAAY,YAAzD,YAAwEE,GAAkBC,GAAIH,GAAa,GAA1H,UACCC,EADD,IACY,mBAAG9E,UAAU,oBAAoBe,MAAO,CAAC,SAAW,mBAmJnDkE,GA/IH,WACR,IAAMhF,EAAWC,cAEXzC,EAAe2C,YAAYvC,GAC3BD,EAAQwC,YAAY1C,GACpBF,EAAU4C,YAAYtC,GAEtBb,EAAWmD,YAAYzD,GACvBK,EAAQoD,YAAY3D,GACpBrB,EAAUgF,YAAYxD,GACtBtB,EAAQ8E,YAAYvD,GACpBtB,EAAU6E,YAAYtD,GAXd,EAaQsD,YAAYhB,EAAiChE,EAASE,EAAOC,IAbrE,mBAaP2B,EAbO,KAeRC,GAfQ,KAeMJ,EAAeC,EAAOC,EAAUC,IAC9CgI,EAAQ,UAAMC,wBAAN,cAWd,OAVA3E,qBAAU,WACb4E,MAAMF,GACDvK,MAAK,SAACgD,GAAD,OAAUA,EAAK0H,UACpB1K,MAAK,SAACgD,GAAD,OAAUsC,ELtDd,SAAiBtC,GACpB,MAAO,CACV1B,KAAMoB,EACNrB,MAAO2B,GKmDsB2H,CAAQ3H,OAChC4H,OAAM,SAAC3H,GACX4H,QAAQ5H,MAAMA,GACdqC,ELnDK,SAAkBrC,GACrB,MAAO,CACV3B,KAAMqB,EACNtB,MAAO4B,GKgDG6H,CAAS7H,SAEb,CAACqC,EAAUiF,IAEV1H,EACA,qBAAKwC,UAAU,iBAAiB0F,KAAK,SAArC,SACH,sBAAM1F,UAAU,kBAAhB,0BAGGvC,EACA,2CAAckI,KAAKC,UAAUhI,GAA7B,OAGG,cAAC,IAAD,UACH,qBAAKoC,UAAU,YAAf,SACH,eAAC,IAAD,WACI,eAAC,IAAD,CAAO6F,KAAK,OAAZ,UACH,cAAC,GAAD,IACM,cAAC,GAAD,CAAqBjB,SAAS,WACTD,SAAS,iBAEjC,eAAC,IAAD,CAAOkB,KAAK,YAAZ,UACH,cAAC,GAAD,IACM,cAAC,GAAD,CAAqBhB,UAAU,OACVC,UAAU,MACVF,SAAS,gBACTD,SAAS,sBAEjC,eAAC,IAAD,CAAOkB,KAAK,iBAAZ,UACH,iEACA,cAAC,EAAD,IACM,cAAC,GAAD,CAAqBhB,UAAU,YACVC,UAAU,WACVC,eAAgB5H,EAAYA,YAAc,GAAK,WAC/CyH,SAAS,aACTD,SAAS,mBAEjC,eAAC,IAAD,CAAOkB,KAAK,cAAZ,UACH,mDACA,ifAOE,6PAGiC,mBACjCvE,KAAK,2CAD4B,kDAGnC,cAAC,EAAD,IACM,cAAC,GAAD,CAAqBuD,UAAU,iBACVC,UAAU,gBACVF,SAAS,UACTD,SAAS,SAEjC,eAAC,IAAD,CAAOkB,KAAK,IAAZ,UACH,wDACA,8BACA,mBAAGlF,OAAO,SACNW,KAAK,4GADT,0BADA,8dAkBA,gfAaA,kDACA,4HAC8C,mBAC7CA,KAAK,sEACLX,OAAO,SAFsC,mBAD9C,gIASI,8BACJ,+DADI,ybAWE,cAAC,GAAD,CAAqBkE,UAAU,cAAcC,UAAU,0BCxKpDgB,GANKC,YAAgB,CAChCvJ,UPiIG,WAAkE,IAAxClB,EAAuC,uDAA/BL,EAAuB8E,EAAQ,uCACpE,OAAQA,EAAO9D,MACf,KAAKP,EACRJ,EAAMG,sBAAuBsE,EAAO/D,MACpC,MACG,KAAKL,EACRL,EAAME,qBAAsBuE,EAAO/D,MACnC,MACG,KAAKJ,EACJN,EAAMF,UAAY2E,EAAO/D,QACzBV,EAAMA,WAAQD,GAElBC,EAAMF,QAAU2E,EAAO/D,MACvB,MACG,KAAKH,EACJP,EAAMA,QAAUyE,EAAO/D,QACvBV,EAAMC,aAAUF,GAEpBC,EAAMA,MAAQyE,EAAO/D,MACrB,MACG,KAAKF,EACRR,EAAMC,QAAUwE,EAAO/D,MAKpB,OAAOV,GO1JPkI,IH2FG,WAAsD,IAAlClI,EAAiC,uDAAzBqH,EAAiB5C,EAAQ,uCACxD,OAAQA,EAAO9D,MACf,KAAKgH,EACR3H,EAAMuH,YAAc9C,EAAO/D,MAC3B,MACG,KAAKkH,EACR5H,EAAMwH,SAAW/C,EAAO/D,MACxB,MACG,KAAKmH,EACR7H,EAAMyH,aAAehD,EAAO/D,MAC5B,MACG,KAAKgH,EACR1H,EAAMsH,gBAAkB7C,EAAO/D,MAK5B,OAAOV,GG3GPqC,KN6EG,WAAkD,IAA7BrC,EAA4B,uDAAtBiC,EAAcwC,EAAQ,uCACpD,OAAQA,EAAO9D,MACf,KAAKoB,EACR/B,EAAMqC,KAAOoC,EAAO/D,MACpBV,EAAMkC,SAAU,EAChB,MACG,KAAKF,EACRhC,EAAMmC,cAAe,EACrBnC,EAAMsC,MAAQmC,EAAO/D,MACrBV,EAAMkC,SAAU,EAKb,OAAOlC,KOzFL0K,I,MAAQC,YAAYH,GACrBI,OAAOC,8BAAgCD,OAAOC,iCAGnDC,iBACI,cAAC,IAAD,CAAUJ,MAAOA,GAAjB,SACH,cAAC,IAAMK,WAAP,UACI,cAAC,GAAD,QAGHC,SAASC,eAAe,SAM1B/L,M","file":"static/js/main.8d3aaaf6.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","/* State */\n//================================================================================\nexport const sprayGateInitialState = {\n    growthStageOptions: [\"Early vegetative\",\n\t\t\t \"Late vegetative (pod-filling) R1-R6\",\n\t\t\t \"Beginning maturity\"],\n    rustPresenceOptions: [\"No rust present in field\",\n\t\t\t  \"No rust present in field but spotted within 100km\",\n\t\t\t  \"<10% disease observed on lower canopy and nowhere else on the plant\",\n\t\t\t  \"<20% disease observed on the lower canopy and <10% disease in mid-canopy\",\n\t\t\t  \">10% disease observed in mid-canopy and anywhere in the upper canopy\"],\n    country: undefined,\n    state: undefined,\n    variety: undefined,\n    growthStageSelection: 0,\n    rustPresenceSelection: 0,\n};\n/* Actions */\n//================================================================================\nconst SET_RUST_PRESENCE_SELECTION_INDEX = \"sprayGate/setRustPresenceSelection\";\nconst SET_GROWTH_STAGE_SELECTION_INDEX = \"sprayGate/setGrowthStageSelection\";\nconst SET_COUNTRY = \"sprayGate/setCountry\";\nconst SET_STATE = \"sprayGate/setState\";\nconst SET_VARIETY = \"sprayGate/setVariety\";\n\nexport function setRustPresenceSelection(value) {\n    return {\n\ttype: SET_RUST_PRESENCE_SELECTION_INDEX,\n\tvalue: value\n    };\n}\nexport function setGrowthStageSelection(value) {\n    return {\n\ttype: SET_GROWTH_STAGE_SELECTION_INDEX,\n\tvalue: value\n    };\n}\nexport function setCountry(value) {\n    return {\n\ttype: SET_COUNTRY,\n\tvalue: value\n    };\n}\nexport function setState(value) {\n    return {\n\ttype: SET_STATE,\n\tvalue: value\n    };\n}\nexport function setVariety(value) {\n    return {\n\ttype: SET_VARIETY,\n\tvalue: value\n    };\n}\n/* Selectors */\n//================================================================================\nexport const selectGrowthStageOptions = (s) => s.sprayGate.growthStageOptions;\nexport const selectGrowthStageSelection= (s) => s.sprayGate.growthStageSelection;\n\nexport const selectRustPresenceOptions = (s) => s.sprayGate.rustPresenceOptions;\nexport const selectRustPresenceSelection= (s) => s.sprayGate.rustPresenceSelection;\n\nexport const selectCountry = (s) => s.sprayGate.country;\nexport const selectState = (s) => s.sprayGate.state;\nexport const selectVariety = (s) => s.sprayGate.variety;\n\nexport const getShouldSpray = (stage, presence, sus) => {\n    let shouldSpray;\n    let why;\n    if (sus === \"Susceptible\") {\n\tswitch (stage) {\n\tcase sprayGateInitialState.growthStageOptions[0]:\n\t    switch (presence) {\n\t    case sprayGateInitialState.rustPresenceOptions[0]:\n\t\tshouldSpray = false;\n\t\twhy = \"There is no current threat of a rust outbreak\";\n\t\tbreak;\n\t    case sprayGateInitialState.rustPresenceOptions[1]:\n\t\tshouldSpray = false;\n\t\twhy = \"Rust spores are windborne and can travel quickly given conducive conditions. Increase scouting and prepare to spray if rust is identified in your fields\";\n\t\tbreak;\n\t    case sprayGateInitialState.rustPresenceOptions[2]:\n\t    case sprayGateInitialState.rustPresenceOptions[3]:\n\t    case sprayGateInitialState.rustPresenceOptions[4]:\n\t\tshouldSpray = false;\n\t\twhy = \"Before plants reach R1, there is no major threat to yield. If conditions stay conducive and disease progresses consider spraying at late vegetative stage\";\n\t\tbreak;\n\n\t    }\n\t    break;\n\tcase sprayGateInitialState.growthStageOptions[1]:\n\t    switch (presence) {\n\t    case sprayGateInitialState.rustPresenceOptions[0]:\n\t\tshouldSpray = false;\n\t\twhy = \"There is no current threat of a rust outbreak\";\n\t\tbreak;\n\t    case sprayGateInitialState.rustPresenceOptions[1]:\n\t\tshouldSpray = false;\n\t\twhy = \"Rust spores are windborne and can travel quickly given conducive conditions. Increase scouting and prepare to spray if rust is identified in your fields\";\n\t\tbreak;\n\t    case sprayGateInitialState.rustPresenceOptions[2]:\n\t\tshouldSpray = true;\n\t\twhy = \"Spraying a fungicide may suppress rust outbreak and significantly increase yields\";\n\t\tbreak;\n\t    case sprayGateInitialState.rustPresenceOptions[3]:\n\t\tshouldSpray = true;\n\t\twhy = \"Spraying a fungicide may suppress rust outbreak and significantly increase yields\";\n\t\tbreak;\n\t    case sprayGateInitialState.rustPresenceOptions[4]:\n\t\tshouldSpray = false;\n\t\twhy = \"The infection is too severe and spraying is no longer economically viable\";\n\t\tbreak;\n\n\t    }\n\t    break;\n\tcase sprayGateInitialState.growthStageOptions[0]:\n\t    shouldSpray = false;\n\t    why = \"Spraying nearing or after pods are full will not be an economically viable option since it will not have an impact on yields\";\n\t    break;\n\t}\n\n    } else if (sus === \"Unknown\") {\n\tshouldSpray = false;\n\twhy = \"There is no data about this variety/location\";\n    } else {\n\tshouldSpray = false;\n\twhy = \"There is no evidence applying fungicides to a resistant cultivar is an economically viable option.\";\n    }\n    return {\n\tshouldSpray, why\n    };\n}\n\n/* Reducer */\n//================================================================================\nexport function sprayGateReducer(state = sprayGateInitialState, action) {\n    switch (action.type) {\n    case SET_RUST_PRESENCE_SELECTION_INDEX:\n\tstate.rustPresenceSelection= action.value;\n\tbreak;\n    case SET_GROWTH_STAGE_SELECTION_INDEX:\n\tstate.growthStageSelection= action.value;\n\tbreak;\n    case SET_COUNTRY:\n\tif (state.country !== action.value) {\n\t    state.state = undefined;\n\t}\n\tstate.country = action.value;\n\tbreak;\n    case SET_STATE:\n\tif (state.state !== action.value) {\n\t    state.variety = undefined;\n\t}\n\tstate.state = action.value;\n\tbreak;\n    case SET_VARIETY:\n\tstate.variety = action.value;\n\tbreak;\n    default:\n\tbreak;\n    }\n    return state;\n}\n","export const SET_DATA = \"data/setData\";\nconst SET_ERROR = \"data/setError\";\n\n/* State */\n//================================================================================\nconst initialState = {\n    loading: true,\n    errorOccured: false,\n};\n/* Actions */\n//================================================================================\nexport function setData(data) {\n    return {\n\ttype: SET_DATA,\n\tvalue: data\n    };\n}\nexport function setError(error) {\n    return {\n\ttype: SET_ERROR,\n\tvalue: error\n    };\n}\n/* Selectors */\n//================================================================================\nexport const selectError = s => s.data.error;\nexport const selectErrorOccured = s => s.data.errorOccured;\nexport const selectLoading = s => s.data.loading;\n\n// This may be a bad idea, but I'm gonna try it (I mean referring to external data)\nexport const selectValidCountries = s => {\n    let out = new Set();\n    for (let season in s.data.data) {\n\tObject.keys(s.data.data[season]).forEach(out.add, out);\n    }\n    return [...out];\n}\n// This may be a bad idea, but I'm gonna try it (I mean referring to external data)\nexport const selectValidStates = c => s => {\n    let out = new Set();\n    for (let season in s.data.data) {\n\tif (c in s.data.data[season]) {\n\t    Object.keys(s.data.data[season][c]).forEach(out.add, out);\n\t}\n    }\n    return [...out];\n}\nexport const selectValidVarieties = s => {\n    if (!s.sprayGate.country && s.sprayGate.state) {\n\treturn [];\n    }\n    let out = [];\n    for (let season in s.data.data) {\n\tif (!(s.sprayGate.country in s.data.data[season] && s.sprayGate.state in s.data.data[season][s.sprayGate.country])) {\n\t    continue;\n\t}\n\tout = out.concat(Object.keys(s.data.data[season][s.sprayGate.country][s.sprayGate.state]));\n    }\n    return out;\n};\nconst compareSeasons = (a,b) => {\n    const sa = a.split(\"/\");\n    const sb = b.split(\"/\");\n    const la = sa.length;\n    const lb = sb.length;\n\n    const aa = sa.reduce((a, b) => a + b)/la;\n    const ab = sa.reduce((a, b) => a + b)/lb;\n\n    return ab - aa;\n}\nexport const selectLocationVarietySusceptible = (co, st, va) => s => {\n    if (!co || !st || !va) {\n\treturn [undefined, undefined];\n    }\n    const d = s.data.data;\n    for (let se of Object.keys(s.data.data).sort(compareSeasons)) {\n\tif (d[se][co] && d[se][co][st] && d[se][co][st][va]) {\n\t    return [d[se][co][st][va], se];\n\t}\n    }\n    return [undefined, undefined];\n};\n\n/* Reducer */\n//================================================================================\nexport function dataReducer(state=initialState, action) {\n    switch (action.type) {\n    case SET_DATA:\n\tstate.data = action.value;\n\tstate.loading = false;\n\tbreak;\n    case SET_ERROR:\n\tstate.errorOccured = true;\n\tstate.error = action.value;\n\tstate.loading = false;\n\tbreak;\n    default:\n\tbreak;\n    }\n    return state;\n}\n","import { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport {\n    setRustPresenceSelection,\n    setGrowthStageSelection,\n    setCountry,\n    setState,\n    setVariety,\n    selectRustPresenceOptions,\n    selectGrowthStageOptions,\n    selectRustPresenceSelection,\n    selectGrowthStageSelection,\n    selectCountry,\n    selectState,\n    selectVariety,\n    getShouldSpray,\n} from '../../redux/spray_gate';\n\nimport {\n    selectValidCountries,\n    selectValidStates,\n    selectValidVarieties,\n    selectLocationVarietySusceptible\n} from '../../redux/data';\n\nconst GeneralSelector = ({name, valSelector, optionsSelector, action, className}) => {\n    const dispatch = useDispatch();\n\n    const idx = useSelector(valSelector);\n    const options = useSelector(optionsSelector);\n    let temp = undefined;\n    if ((!idx || !options.includes(idx)) && options.length > 0) {\n\ttemp = options[0];\n    }\n    useEffect(() => { if (temp) dispatch(action(temp))}, [temp]);\n    return <select name={name}\n\t\t   className={`form-select ${className}` }\n\t\t   onChange={(e) => dispatch(action(e.target.value))}\n\t\t   value={idx}\n\t   >\n\t       {options.map((o) => <option key={o} value={o}> {o} </option>)}\n\t   </select>;\n}\nexport const SprayInfo = () => {\n    const presence = useSelector(selectRustPresenceSelection);\n    const stage = useSelector(selectGrowthStageSelection);\n    const country = useSelector(selectCountry);\n    const state = useSelector(selectState);\n    const variety = useSelector(selectVariety);\n\n    const [sus, season] = useSelector(selectLocationVarietySusceptible(country, state, variety));\n\n    const shouldSpray = getShouldSpray(stage, presence, sus);\n    return <div>\n    <div className=\"border border-3 shadow shadow-3 p-3 mx-auto my-5\" style={{\"width\":\"max-content\"}}>\n\t       <h2 className=\"text-center\">\n\t\t   You should {!shouldSpray.shouldSpray && \"not\"} spray\n\t       </h2>\n\t       <p className=\"text-center\">\n\t\t   {shouldSpray.why}\n\t       </p>\n         </div>\n\t       <p>\n\tPlease keep in mind that spraying, as well as the number of times you\n    spray, is dependent on conducive conditions for the\n    disease. These recommendations are given based on the\n    assumption of continued conducive environments and disease\n    progression.\n\t       </p>\n\t   </div>;\n}\nexport const SprayGate = () => {\n    const country = useSelector(selectCountry);\n    const state = useSelector(selectState);\n    const variety = useSelector(selectVariety);\n\n    const [res, trialSeason] = useSelector(selectLocationVarietySusceptible(country, state, variety));\n    let susNode, borderColor;\n    if (res === \"Unknown\") {\n\tborderColor = \"border-warning\";\n\tsusNode = <p className=\"fs-2 m-0\"> There is no reaction data for <span className=\"text-decoration-underline\">{variety}</span> at &nbsp; \n\t\t      <span className=\"text-decoration-underline\">{state}, {country}</span> PAT Location. If you have rust reaction data, please contact SIL immediately at <a href=\"mailto:soybeaninnovationlab@illinois.edu\">soybeaninnovationlab@illinois.edu </a>\n\t\t  </p>;\n    } else {\n\tlet sus = res === \"Susceptible\";\n\tborderColor = sus ? \"border-danger\" : \"border-success\";\n\t    susNode = <>\n\t\t      <p className=\"fs-2 m-0\"> <span className=\"text-decoration-underline\">{variety}</span> showed a &nbsp;\n          <span className=\"text-decoration-underline\">{sus ? \"TAN\" : \"RB\"}</span>&nbsp;\n           reaction during the&nbsp;\n\t\t\t  <span className=\"text-decoration-underline\">{trialSeason}</span> season at the &nbsp;\n\t\t\t  <span className=\"text-decoration-underline\">{state}, {country} </span> PAT\n\t\t\t  location. </p>\n        <p className=\"fs-2 m-0\">This indicated this variety is&nbsp;\n        <span className=\"text-decoration-underline\">{sus ? \"susceptible\" : \"resistant\"}\n        </span> to this location's rust\n\t\t      population. </p>\n\t\t  </>;\n    }\n    if (res === undefined) {\n\tsusNode = <> </>;\n    }\n    return <div className=\"mb-3\">\n\t       <div className=\"border border-3 shadow shadow-4 p-3\">\n\t\t   <div className=\"row\">\n\t\t       <label className=\"col-md my-auto\" htmlFor=\"growthStage\"> Growth Stage: </label>\n\t\t       <GeneralSelector className=\"col-md\"  name=\"growthStage\"\n\t\t\t\t\tvalSelector={selectGrowthStageSelection}\n\t\t\t\t\toptionsSelector={selectGrowthStageOptions}\n\t\t\t\t\taction={setGrowthStageSelection} />\n\t\t   </div>\n\t\t   <div className=\"row\">\n\t\t       <label className=\"col-md my-auto\" htmlFor=\"rustPresence\"> Rust Pressure: </label>\n\t\t       <GeneralSelector className=\"col-md\" name=\"rustPresence\"\n\t\t\t\t\tvalSelector={selectRustPresenceSelection}\n\t\t\t\t\toptionsSelector={selectRustPresenceOptions}\n\t\t\t\t\taction={setRustPresenceSelection} />\n\t\t   </div>\n\t\t   <div className=\"row\">\n\t\t       <label className=\"col-md my-auto\" htmlFor=\"country\"> Country: </label>\n\t\t       <GeneralSelector className=\"col-md\" name=\"country\"\n\t\t\t\t\tvalSelector={selectCountry}\n\t\t\t\t\toptionsSelector={selectValidCountries}\n\t\t\t\t\taction={setCountry} />\n\t\t   </div>\n\t\t   <div className=\"row\">\n\t\t       <label className=\"col-md my-auto\" htmlFor=\"state\"> Nearest PAT Location: </label>\n\t\t       <GeneralSelector className=\"col-md\" name=\"state\"\n\t\t\t\t\tvalSelector={selectState}\n\t\t\t\t\toptionsSelector={selectValidStates(country)}\n\t\t\t\t\taction={setState} />\n\t\t   </div>\n\t\t   <div className=\"row\">\n\t\t       <label htmlFor=\"variety\" className=\"col-md my-auto\"> Soybean Variety: </label>\n\t\t       <GeneralSelector\n\t\t\t   className=\"col-md\"\n\t\t\t   name=\"variety\"\n\t\t\t   valSelector={selectVariety}\n\t\t\t   optionsSelector={selectValidVarieties}\n\t\t\t   action={setVariety} />\n\t\t   </div>\n\t       </div>\n\t       <div className={`border border-3 ${borderColor} shadow shadow-4 p-3 mt-3 text-center`}>\n\t\t   {susNode}\n\t       </div>\n\t   </div>;\n};\n","import { useState, useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\n\nexport const MakeInput = ({name, state, set, units, formatter, children, labelClassNames, inputClassNames, spanClassNames}) => { \n    const dispatch = useDispatch();\n    const [input, setInput] = useState(state);\n    const [focused, setFocused] = useState(false);\n    useEffect(() => {\n\tlet parsed = Number.parseFloat(input);\n\tif (!isNaN(parsed) && parsed && parsed !== state) {\n\t    dispatch(set(parsed));\n\t}\n    }, [dispatch, state, set, input]);\n\n    if (!formatter) {\n\tformatter = (a) => a;\n    }\n\n    return <>\n\t<label className={labelClassNames} htmlFor={name}> {children} </label>\n\t<div style={{\"whiteSpace\": \"nowrap\"}} className={inputClassNames}>\n\t<input style={{\"width\": \"5rem\"}} name={name} value={focused ? input : formatter(input)} onBlur={(e) => setFocused(false)} onFocus={(e) => setFocused(true)} onChange={e => setInput(e.target.value)} />\n\t<span className={spanClassNames}> {units} </span>\n\t</div>\n\t</>;\n};\n","/* State */\n//================================================================================\nexport const roiInitialState = {\n    costOfFungicide: 24.70,\n    costOfLabor: 29.64,\n    plotSize: 5,\n    priceOfGrain: 400,\n};\n/* Actions */\n//================================================================================\nconst SET_COST_OF_FUNGICIDE = \"roi/setCostOfFungicide\";\nconst SET_COST_OF_LABOR = \"roi/setCostOfLabor\";\nconst SET_PLOT_SIZE = \"roi/setPlotSize\";\nconst SET_PRICE_OF_GRAIN = \"roi/setPriceOfGrain\";\n\nexport function setCostOfFungicide(value) {\n    return {\n\ttype: SET_COST_OF_FUNGICIDE,\n\tvalue: value\n    };\n}\nexport function setCostOfLabor(value) {\n    return {\n\ttype: SET_COST_OF_LABOR,\n\tvalue: value\n    };\n}\nexport function setPlotSize(value) {\n    return {\n\ttype: SET_PLOT_SIZE,\n\tvalue: value\n    };\n}\nexport function setPriceOfGrain(value) {\n    return {\n\ttype: SET_PRICE_OF_GRAIN,\n\tvalue: value\n    };\n}\n/* Selectors */\n//================================================================================\nexport const selectCostOfFungicide = (s) => s.roi.costOfFungicide;\nexport const selectCostOfLabor = (s) => s.roi.costOfLabor;\nexport const selectPlotSize = (s) => s.roi.plotSize;\nexport const selectPriceOfGrain = (s) => s.roi.priceOfGrain;\n\nexport const selectROIResults = (s) => {\n    const priceOfGrain = selectPriceOfGrain(s);\n    const plotSize = selectPlotSize(s);\n    const costOfFungicide = selectCostOfFungicide(s);\n    const costOfLabor = selectCostOfLabor(s);\n    let out = [];\n    const keys = [{\n\tgrowthStage: \"R1-R2\",\n\tsprays:1,\n\tavgYield: .4845,\n    },\n    {\n\tgrowthStage: \"R1-R2\",\n\tsprays:2,\n\tavgYield: .9785\n    },\n    {\n\tgrowthStage: \"R1-R2\",\n\tsprays:3,\n\tavgYield: 1.508\n    },\n    {\n\tgrowthStage: \"R3-R4\",\n\tsprays: 1,\n\tavgYield: .717\n    },\n    {\n\tgrowthStage: \"R3-R4\",\n\tsprays:2,\n\tavgYield: 1.164\n    },\n    {\n\tgrowthStage: \"R5-R6\",\n\tsprays:1,\n\tavgYield: .7715\n    },\n\t\t ];\n    for (let key of keys) {\n\tlet incRev = key.avgYield * priceOfGrain;\n\tlet revCosts = incRev - key.sprays*(costOfLabor + costOfFungicide);\n\tout.push({\n\t    incRev: incRev,\n\t    incRevTotal: key.avgYield * priceOfGrain * plotSize,\n\t    revCosts: revCosts,\n\t    returnOnIn: revCosts/(costOfFungicide*key.sprays),\n\t    ...key,\n\t});\n    }\n    return out;\n}\n\n/* Reducer */\n//================================================================================\nexport function roiReducer(state = roiInitialState, action) {\n    switch (action.type) {\n    case SET_COST_OF_LABOR:\n\tstate.costOfLabor = action.value;\n\tbreak;\n    case SET_PLOT_SIZE:\n\tstate.plotSize = action.value;\n\tbreak;\n    case SET_PRICE_OF_GRAIN:\n\tstate.priceOfGrain = action.value;\n\tbreak;\n    case SET_COST_OF_FUNGICIDE:\n\tstate.costOfFungicide = action.value;\n\tbreak;\n    default:\n\tbreak;\n    }\n    return state;\n}\n","import { useSelector, useDispatch } from 'react-redux';\n\nimport { MakeInput } from '../Utils/make_input';\n\nimport {\n    setCostOfFungicide,\n    setCostOfLabor,\n    setPlotSize,\n    setPriceOfGrain,\n    selectCostOfFungicide,\n    selectCostOfLabor,\n    selectPlotSize,\n    selectPriceOfGrain,\n    selectROIResults,\n   } from '../../redux/roi';\n\nexport const ROIInfo = () => {\n    return <div>\n\t       <h1> What is the economic gain of spraying fungicide?</h1>\n         <p className=\"fs-3\">Even when there is a yield increase potential by fungicide\n         application, the cost of spraying and gross margin increases still need\n         to be considered to determine if spraying is an economically viable\n         option. Below please enter in the growth stage you plan to start\n         spraying your plants, the cost of fungicide per application per\n         hectare, plot size in hectares, and the price of grain. Please use <a href=\"https://www.xe.com/currencyconverter/\" target=\"_blank\">\n         this currency converter </a>to convert local currency to US Dollars ($) </p>\n\t</div>;\n};\n\nexport const ROI = () => {\n    const dispatch = useDispatch();\n\n    const costOfFungicide = useSelector(selectCostOfFungicide);\n    const plotSize = useSelector(selectPlotSize);\n    const priceOfGrain = useSelector(selectPriceOfGrain);\n    const costOfLabor = useSelector(selectCostOfLabor);\n\n    const roi = useSelector(selectROIResults);\n\n    return <div>\n      <h1> Return on Investment </h1>\n\t       <div className=\"border border-3 shadow shadow-3 p-3 px-5 mx-auto\" style={{\"width\":\"max-content\"}}>\n\t<div className=\"row my-1\">\n\t    <MakeInput labelClassNames=\"col-md-6 text-nowrap\" inputClassNames=\"col-md-6\"\n\t\t       name=\"costOfFungicide\" state={costOfFungicide}\n\t\t       set={setCostOfFungicide} units=\"/MT\" formatter={(v) => `\\$${v}`}>\n\t\tCost of Fungicide\n\t    </MakeInput>\n\t</div>\n\t<div className=\"row my-1\">\n\t    <MakeInput labelClassNames=\"col-md-6 text-nowrap\" inputClassNames=\"col-md-6\"\n\t\t       name=\"plotSize\" state={plotSize}\n\t\t       set={plotSize} units=\"ha\">\n\t\tPlot Size\n\t       </MakeInput>\n\t</div>\n\t<div className=\"row my-1\">\n\t    <MakeInput labelClassNames=\"col-md-6 text-nowrap\" inputClassNames=\"col-md-6\"\n\t\t       name=\"priceOfGrain\" state={priceOfGrain}\n\t\t       set={setPriceOfGrain} units=\"/MT\" formatter={(v) => `\\$${v}`}>\n\t\tPrice of Grain\n\t       </MakeInput>\n\t</div>\n\t<div className=\"row my-1\">\n\t    <MakeInput labelClassNames=\"col-md-6 text-nowrap\" inputClassNames=\"col-md-6\"\n\t\t       name=\"costOfLabor\" state={costOfLabor}\n\t\t       set={setCostOfLabor} units=\"/spray/ha\" formatter={(v) => `\\$${v}`}>\n\t\tCost of Labor\n\t       </MakeInput>\n\t</div>\n         </div>\n\t       <table className=\"table border border-3 my-3 mx-auto\">\n\t\t   <thead>\n\t\t   <tr>\n\t\t       <th>\n\t\t\t   Growth Stage\n\t\t       </th>\n\t\t       <th>\n\t\t\t   Number of Sprays\n\t\t       </th>\n\t\t       <th>\n\t\t\t   Average Yield\n\t\t       </th>\n\t\t       <th>\n\t\t\t   Increase in Revenue/ha\n\t\t       </th>\n\t\t       <th>\n\t\t\t   Increase in Total Revenue\n\t\t       </th>\n\t\t       <th>\n\t\t\t   Revenue Costs\n\t\t       </th>\n\t\t       <th>\n\t\t\t   Return on inputs\n\t\t       </th>\n\t\t   </tr>\n\t\t       </thead>\n\t\t   <tbody>\n\t\t   {roi.map((d) => (\n\t\t       <tr>\n\t\t\t   <td>\n\t\t\t       {d.growthStage}\n\t\t\t   </td>\n\t\t\t   <td>\n\t\t\t       {d.sprays}\n\t\t\t   </td>\n\t\t\t   <td>\n\t\t\t       ${d.avgYield.toFixed(2)}\n\t\t\t   </td>\n\t\t\t   <td>\n\t\t\t       ${d.incRev.toFixed(2)}\n\t\t\t   </td>\n\t\t\t   <td>\n\t\t\t       ${d.incRevTotal.toFixed(2)}\n\t\t\t   </td>\n\t\t\t   <td>\n\t\t\t       ${d.revCosts.toFixed(2)}\n\t\t\t   </td>\n\t\t\t   <td>\n\t\t\t       ${d.returnOnIn.toFixed(2)}\n\t\t\t   </td>\n\t\t       </tr>\n\t\t   ))}\n\t\t       </tbody>\n\t       </table>\n\t       <div className=\"border border-3 shadow shadow-3 my-3 p-3\">\n\t\t   <h3> Definitions </h3>\n\t       <dl className=\"row\">\n\t\t   <dt className=\"col-sm-3\">Average yield increases</dt>\n\t\t   <dd className=\"col-sm-9\">based on timing and number of sprays are estimated based on select locations in Mueller, et al. 2009. Plant Disease 93(3):243-248. Yield increases from fungicide application are highly dependent on rust pressure. These averages are based on moderate rust pressure and will be lower or higher depending on conducive environment. </dd>\n\n\n\t\t   <dt className=\"col-sm-3\">Increase in revenue/ha</dt>\n\t\t   <dd className=\"col-sm-9\">based off the estimated yield increase (MT/ha) multiplied by the price of grain ($/MT) </dd>\n\n\t\t   <dt className=\"col-sm-3\">Gross margins/ha</dt>\n\t\t   <dd className=\"col-sm-9\">calculated by subtracting the cost of fungicide and labor per spray multiplied by the number of sprays from the increase in revenue/ha.</dd>\n\n\t\t   <dt className=\"col-sm-3\">Return on inputs</dt>\n\t\t   <dd className=\"col-sm-9\">the gross margin/ha divided by the cost of fungicide/ha multiplied by the number of sprays. </dd>\n\t       </dl>\n\t\t   </div>\n\n\n    </div>;\n\n}\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n    HashRouter as Router,\n    Switch,\n    Route,\n    Link\n} from \"react-router-dom\";\n\nimport {\n    setRustPresenceSelection,\n    setGrowthStageSelection,\n    setLocation,\n    setVariety,\n    selectRustPresenceOptions,\n    selectGrowthStageOptions,\n    selectRustPresenceSelection,\n    selectGrowthStageSelection,\n    selectCountry,\n    selectState,\n    selectVariety,\n    getShouldSpray,\n} from '../../redux/spray_gate';\nimport {\n    selectLocationVarietySusceptible\n} from '../../redux/data';\n\nimport { SprayGate, SprayInfo } from '../SprayGate';\nimport { ROI, ROIInfo } from '../ROI';\n\nimport { setError,\n\t selectErrorOccured,\n\t selectError,\n\t selectLoading,\n\t setData } from '../../redux/data';\n\nconst NavigationComponent = ({leftLink, leftText, rightLink, rightText, rightClassName})=> {\n  return <div className=\"d-flex w-100 flex-direction-row justify-content-between mb-3\">\n  <Link className={`px-3 btn btn-lg btn-primary ${leftLink ? \"visible\" : \"invisible\"}`} to={leftLink || \"\"}>\n  <i className=\"bi bi-arrow-left\" style={{\"fontSize\":\"1.5rem\"}}></i> {leftText} </Link>\n  <Link className={`px-3 btn btn-lg btn-primary ${rightLink ? \"visible\" : \"invisible\"} ${rightClassName}`} to={rightLink || \"\"}>\n  {rightText} <i className=\"bi bi-arrow-right\" style={{\"fontSize\":\"1.5rem\"}}></i></Link>\n  </div>;\n}\n\nconst App = () => {\n    const dispatch = useDispatch();\n\n    const errorOccured = useSelector(selectErrorOccured);\n    const error = useSelector(selectError);\n    const loading = useSelector(selectLoading);\n\n    const presence = useSelector(selectRustPresenceSelection);\n    const stage = useSelector(selectGrowthStageSelection);\n    const country = useSelector(selectCountry);\n    const state = useSelector(selectState);\n    const variety = useSelector(selectVariety);\n\n    const [sus, season] = useSelector(selectLocationVarietySusceptible(country, state, variety));\n\n    const shouldSpray = getShouldSpray(stage, presence, sus);\n    const DATA_URL = `${process.env.PUBLIC_URL}/data.json`;\n    useEffect(() => {\n\tfetch(DATA_URL)\n\t    .then((data) => data.json())\n\t    .then((data) => dispatch(setData(data)))\n\t    .catch((error) => {\n\t\tconsole.error(error);\n\t\tdispatch(setError(error))\n\t    });\n    }, [dispatch, DATA_URL]);\n\n    if (loading) {\n\treturn <div className=\"spinner-border\" role=\"status\">\n\t\t   <span className=\"visually-hidden\">Loading...</span>\n\t       </div>;\n    }\n    if (errorOccured) {\n\treturn <pre> Error: {JSON.stringify(error)} </pre>;\n    }\n\n    return <Router>\n\t       <div className=\"container\">\n\t\t   <Switch>\n\t\t       <Route path=\"/roi\">\n\t\t\t   <ROI />\n            <NavigationComponent leftText=\"ROI Info\"\n                                 leftLink=\"/roi-info\"/>\n\t\t       </Route>\n\t\t       <Route path=\"/roi-info\">\n\t\t\t   <ROIInfo />\n            <NavigationComponent rightLink=\"/roi\"\n                                 rightText=\"ROI\"\n                                 leftText=\"Spray Results\"\n                                 leftLink=\"/spray-results\"/>\n\t\t       </Route>\n\t\t       <Route path=\"/spray-results\">\n\t\t\t   <h1> Should I Spray? &mdash; Results</h1>\n\t\t\t   <SprayInfo />\n            <NavigationComponent rightLink=\"/roi-info\"\n                                 rightText=\"ROI Info\"\n                                 rightClassName={shouldSpray.shouldSpray ? \"\" : \"disabled\"}\n                                 leftText=\"Spray Info\"\n                                 leftLink=\"/spray-gate\"/>\n\t\t       </Route>\n\t\t       <Route path=\"/spray-gate\">\n\t\t\t   <h1> Should I Spray? </h1>\n\t\t\t   <p> Deciding to spray fungicides to control rust is\n\t\t\t       dependent on several factors including age of the plant, susceptibility to rust,\n\t\t\t       presence of rust in the field, and conducive environment. Below please enter the\n\t\t\t       current growth stage of your crop, current rust pressure, and what variety you\n\t\t\t       are using along with the nearest PAT location. The location and variety\n\t\t\t       combination will allow us to determine if your variety is susceptible to your\n\t\t\t   local rust population.  </p>\n\t       <p> Is your variety not listed? We may not have sufficient data\n\t       to confirm resistance or susceptibility of a variety in your\n\t       location. If you are interested in a variety not included on the\n\t       list above, please contact us at <a\n\t       href=\"mailto:soybeaninnovationlab@illinois.edu\">soybeaninnovationlab@illinois.edu</a>\n\t       </p>\n\t\t\t   <SprayGate />\n            <NavigationComponent rightLink=\"/spray-results\"\n                                 rightText=\"Spray Results\"\n                                 leftText=\"Welcome\"\n                                 leftLink=\"/\"/>\n\t\t       </Route>\n\t\t       <Route path=\"/\">\n\t\t\t   <h1> Rust Spray Calculator</h1>\n\t\t\t   <p>\n\t\t\t   <a target=\"_blank\"\n\t\t\t       href=\"https://7b7dcda8-7264-4c41-b9a2-b2e845d0c5d1.usrfiles.com/ugd/7b7dcd_e31432ab4564440d86637434fe1dd580.pdf\">\n\t\t\t       Soybean rust\n\t\t\t   </a>&nbsp;\n\t\t\t   is a foliar disease that can\n\t\t\t   have devastating impacts on soybean production\n\t\t\t   causing up\n\t\t\t   to 80% reductions in yield in conducive\n\t\t\t   environments. The impact of this disease is highly\n\t\t\t   reliant on conducive environments. Prolonged periods\n\t\t\t   of relative humidity and warmer temperatures are\n\t\t\t   ideal for soybean rust. Resistant varieties are\n\t\t\t   recommended to control soybean rust, but when\n\t\t\t   resistant varieties are not available applying\n\t\t\t   fungicides may be an effective control method.\n\t\t\t   </p>\n\n\t\t\t   <p>\n\t\t\t   The Rust Spray Calculator was designed to aid in\n\t\t\t   environmentally responsible and economically feasible\n\t\t\t   decision making and gives you a concise decision on\n\t\t\t   whether to spray fungicides to control rust\n\t\t\t   outbreaks. First the calculator determines if you\n\t\t\t   should consider spraying based on maturity of your\n\t\t\t   crop, susceptibility, and rust presence and then\n\t\t\t   determines the economic gain you will achieve by\n\t\t\t   considering the cost of fungicide application and\n\t\t\t   price of grain.\n\t\t\t   </p>\n\n\t\t\t   <h2>Fungicide Safety</h2>\n\t\t\t   <p>There are environmental and human health hazards\n\t\t\t       when spraying fungicides. Please take our <a\n\t\t\t\t   href=\"https://soybeaninnovationlab.getlearnworlds.com/course?courseid=ipm\"\n\t\t\t\t   target=\"_blank\">SIL-U\n\t\t\t       </a> course on pesticide\n\t\t\t       safety before applying fungicides to your fields\n\t\t\t       (a free account is required to access the\n\t\t\t       course).  </p>\n\n\t\t\t       <p>\n\t\t\t   <h2>Avoiding Fungicide Resistance</h2> Misuse, including\n\t\t\t   overuse, of fungicides can result in the pathogen\n\t\t\t   that causes soybean rust developing resistance to\n\t\t\t   fungicides. To avoid fungicide resistance, only spray\n\t\t\t   when necessary, follow the label instruction for that\n\t\t\t   fungicide, and use several modes of action. A mixture\n\t\t\t   of strobilurins and triazoles is recommended for\n\t\t\t   effective rust control. Please consult your extension\n\t\t\t   agent on what products are registered in your area.\n\t\t\t       </p>\n            <NavigationComponent rightLink=\"/spray-gate\" rightText=\"Spray Gate\" />\n\t\t       </Route>\n\t\t   </Switch>\n\t       </div>\n\t   </Router>;\n\n}\n\nexport default App;\n","import { combineReducers } from 'redux';\n\nimport { sprayGateReducer } from './spray_gate';\nimport { roiReducer } from './roi';\nimport { dataReducer } from './data';\n\nconst rootReducer = combineReducers({\n    sprayGate: sprayGateReducer,\n    roi: roiReducer,\n    data: dataReducer,\n});\n\nexport default rootReducer;\n","import React from 'react'\nimport { render } from 'react-dom'\nimport { Provider } from 'react-redux'\nimport { createStore } from 'redux'\n\nimport reportWebVitals from './reportWebVitals';\nimport App from './components/App'\nimport rootReducer from './redux/reducer';\n\nimport './index.scss';\n\nconst store = createStore(rootReducer,\n\t\t\t  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n)\n\nrender(\n    <Provider store={store}>\n\t<React.StrictMode>\n\t    <App />\n\t</React.StrictMode>\n    </Provider>,\n  document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}